
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <title>Create Quiz</title>
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            max-width: 600px;
            padding: 30px;
            border-radius: 10px;
            background: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            margin-top: 50px;
        }

        h2 {
            margin-bottom: 20px;
            color: #343a40;
        }

        .btn-primary {
            width: 100%;
        }

        .invalid-feedback {
            display: none;
        }

        .is-invalid ~ .invalid-feedback {
            display: block;
        }

        /* Sidebar styling to make it static */
        .sidebar {
            position: fixed; /* This makes the sidebar static */
            top: 0;
            left: 0;
            height: 100%; /* Ensures sidebar takes up full height of the viewport */
            min-width: 250px;
            max-width: 250px;
            background-color: #343a40;
            color: white;
            padding-top: 20px;
            z-index: 1000; /* Ensures sidebar is on top */
        }

            .sidebar a {
                color: white;
                text-decoration: none;
                display: block;
                padding: 10px;
                margin: 10px 0;
                border-radius: 5px;
            }

                .sidebar a:hover {
                    background-color: #495057;
                }

        /* Header inside the main content */
        .header {
            background-color: #343a40;
            color: white;
            padding: 10px;
        }
    </style>
</head>

<body>


    <!-- Sidebar -->
    <div class="sidebar">
        <h3 class="text-center">Dashboard</h3>
        <a href="/instructor/Dashboared">Manage Students</a>
        <a href="/instructor/QuizCreation">Add Quiz</a>
        <a href="#">Manage Quizzes</a>
        <a href="#">Reports</a>
        <a href="#">Settings</a>
    </div>

    <div class="container mt-5">
        <h2>Create Quiz</h2>
        <form id="quizForm">
            <div class="form-group">
                <label for="title">Title</label>
                <input type="text" class="form-control" id="title" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea class="form-control" id="description" rows="3" required></textarea>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="quizDegree">Quiz Degree</label>
                <input type="number" class="form-control" id="quizDegree" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="createdDate">Created Date</label>
                <input type="datetime-local" class="form-control" id="createdDate" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="expireDate">Expire Date</label>
                <input type="datetime-local" class="form-control" id="expireDate" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="isAvailable">Is Available</label>
                <select class="form-control" id="isAvailable" required>
                    <option value="">Select</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="examTime">Exam Time (in minutes)</label>
                <input type="number" class="form-control" id="examTime" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="tracksId">Track ID</label>
                <input type="number" class="form-control" id="tracksId" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <div class="form-group">
                <label for="instructorId">Instructor ID</label>
                <input type="text" class="form-control" id="instructorId" required>
                <div class="invalid-feedback">This field is required.</div>
            </div>
            <button type="submit" class="btn btn-primary">Create Quiz</button>
        </form>
    </div>

  @*   <script>
        const form = document.getElementById('quizForm');

        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent default form submission

            // Validate form inputs
            let valid = true;

            Array.from(form.elements).forEach(input => {
                if (!input.checkValidity()) {
                    valid = false;
                    input.classList.add('is-invalid'); // Add Bootstrap invalid class
                } else {
                    input.classList.remove('is-invalid'); // Remove invalid class if valid
                }
            });

            // If valid, redirect to question-create.html
            if (valid) {
                const formData = new FormData(form);
                const quizData = {
                    title: formData.get('title'),
                    description: formData.get('description'),
                    quizDegree: Number(formData.get('quizDegree')),
                    createdDate: formData.get('createdDate'),
                    expireDate: formData.get('expireDate'),
                    isAvailable: formData.get('isAvailable') === 'true',
                    examTime: Number(formData.get('examTime')),
                    tracksId: Number(formData.get('tracksId')),
                    instructorId: formData.get('instructorId'),
                };
                console.log(quizData); // Replace this with an API call
                alert('Quiz created successfully! Redirecting to create questions...'); // Alert before redirect

                // Redirect to the question creation page
                setTimeout(() => {
                    window.location.href = 'question-creation.html';
                }, 500); // Redirect after 2 seconds
            }
        });
    </script> *@
</body>

</html>
